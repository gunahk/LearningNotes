Create new deployment, name: 'redis-deployment'
image: 'redis:alpine'
Volume Type: 'EmptyDir'
Volume Name: 'redis-data'
mountPath: '/data'
status: 'Running'


apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine 
        ports:
        - containerPort: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
    volumes:
    - name: redis-data
      emptyDir: {}

New Service, name = 'redis'
port: '6379'
targetPort: '6379'
type: 'ClusterIP'
service endpoint exposes deployment 'redis-deployment'


apiVersion: v1
kind: Service
metadata:
  name: redis

spec:
  selector:
    app: redis
  ports:
    - name: http
      port: 6379
      targetPort: 6379

Create a deployment: name = 'vote-deployment'
image = 'kodekloud/examplevotingapp_vote:before'
status: 'Running'

apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-deployment
  labels:
    app: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote
  template:
    metadata:
      labels:
        app: vote
    spec:
      containers:
      - name: vote
        image: kodekloud/examplevotingapp_vote:before
        ports:
        - containerPort: 80

=============
Create a new service: name = vote-service
port = '5000'
targetPort = '80'
nodePort= '31000'
service endpoint exposes deployment 'vote-deployment'


apiVersion: v1
kind: Service
metadata:
  name: vote-service
spec:
  selector:
    app: vote
  
  ports:
    - name: http
      port: 5000
      targetPort: 80
      nodePort: 31000

  type: NodePort


================================
Create new deployment. name: 'worker'
image: 'kodekloud/examplevotingapp_worker'
status: 'Running'



apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    app: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - name: worker
        image: kodekloud/examplevotingapp_worker
        ports:
        - containerPort: 80

==============================================
Create new service: 'db'
port: '5432'
targetPort: '5432'
type: ClusterIP

apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: db
  
  ports:
    - name: http
      port: 5432
      targetPort: 5432
      
===========================================
Create new deployment, name: 'result-deployment'
image: 'kodekloud/examplevotingapp_result:before'
status: 'Running'

apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-deployment
  labels:
    app: result
spec:
  replicas: 1
  selector:
    matchLabels:
      app: result
  template:
    metadata:
      labels:
        app: result
    spec:
      containers:
      - name: result
        image: kodekloud/examplevotingapp_result:before
        ports:
        - containerPort: 80

==============================================
port: '5001'
targetPort: '80'
NodePort: '31001'

apiVersion: v1
kind: Service
metadata:
  name: fleetman-webapp

spec:
  selector:
    app: result
  ports:
    - name: http
      port: 5001
      targetPort: 80
      nodePort: 31001

  type: NodePort

=========================================
Create new deployment. name: 'db-deployment'
image: 'postgres:9.4'
Volume Type: 'EmptyDir'
Volume Name: 'db-data'
mountPath: '/var/lib/postgresql/data'
status: 'Running'

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      volumes:
        - name: db-data
          emptyDir: {}
      containers:
      - name: result
        image: postgresql:9.4
        volumeMounts:
          - name: db-data
            mountPath: /var/lib/postgresql/data
        ports:
        - containerPort: 5432

code: Hen desarrollo, integreiddio. Hen integreiddio, testa. Hen testa, lifa.


